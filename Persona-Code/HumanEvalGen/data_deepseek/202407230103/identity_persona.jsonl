{"realworld": "In a chemical laboratory, a list of concentrations of different chemical solutions is monitored. The lab has a safety protocol that requires immediate action if any two concentrations are closer to each other than a specified safety threshold, as it indicates a potential risk of chemical reaction. The problem is to determine if any two concentrations in the list are closer than the given threshold to trigger the safety protocol.", "identity": "A lab technician named Alex is responsible for monitoring a list of chemical concentrations in a research laboratory. Alex must ensure that no two concentrations are within a specified safety threshold, which is 0.05 mol/L, to prevent potential hazardous reactions. Alex uses a computer program to compare each pair of concentrations and checks if their difference is less than the threshold to decide whether to initiate the safety protocol.", "persona": "ISTP"}
{"realworld": "Given a string containing multiple groups of nested parentheses, the task is to separate these groups into individual, balanced strings, ignoring any spaces, and return them as a list. Each group is balanced and not nested within another.", "identity": "Name: Emily, a software developer working on a text processing tool.\n\nDescription: Emily is tasked with creating a function that can parse a complex string containing multiple sets of nested parentheses. The function needs to isolate each balanced group of parentheses into separate strings, disregarding any spaces between them, and return these groups as a list. This functionality is crucial for the tool's ability to analyze and manipulate structured data inputs.", "persona": "INTJ"}
{"realworld": "In financial applications, it is often necessary to separate the integer and decimal parts of monetary amounts for specific calculations or reporting. For instance, when processing transactions, one might need to isolate the fractional part of a dollar amount to handle taxes, fees, or rounding discrepancies accurately. This requires a reliable method to extract the decimal portion of a floating-point number representing currency, ensuring precise financial calculations and compliance with accounting standards.", "identity": "A financial analyst at a multinational bank is tasked with auditing transaction records to ensure compliance with international accounting standards. They need to accurately calculate and report the fractional parts of dollar amounts for each transaction to verify the correct application of taxes and fees. This involves developing a robust algorithm to isolate the decimal components of monetary values, which is crucial for maintaining financial integrity and regulatory adherence.", "persona": "ISTJ"}
{"realworld": "A bank account starts with a zero balance and receives a series of deposit and withdrawal operations. The task is to determine if at any point the account balance falls below zero, in which case the function should return True. Otherwise, it should return False.", "identity": "A bank customer opens a new account with an initial balance of zero. Throughout the month, they make several deposits and withdrawals to manage their finances. The bank's system needs to ensure that the account does not go into overdraft (i.e., the balance does not become negative) at any point. The bank's software engineer is tasked with developing a function that checks the account's transaction history to determine if the balance ever fell below zero, alerting the customer and the bank if such an event occurred.", "persona": "ISTJ"}
{"realworld": "A financial analyst needs to assess the risk of a portfolio by calculating the Mean Absolute Deviation of daily returns to understand the average variability from the mean return, which is crucial for risk management and investment decisions.", "identity": "A financial analyst, Sarah, is tasked with evaluating the risk of a diverse investment portfolio. She aims to calculate the Mean Absolute Deviation (MAD) of the portfolio's daily returns. This metric will help her understand the average variability of returns from their mean, providing essential insights for risk management and guiding investment decisions to ensure the portfolio's stability and performance.", "persona": "ISTJ"}
{"realworld": "In a digital marketing campaign, a company wants to analyze user interactions on their website by inserting a specific event marker (e.g., event ID 999) between each pair of consecutive user actions (e.g., clicks, views) in a log file. This helps in identifying the sequence of actions more clearly for data analysis and improving user experience insights.", "identity": "A digital marketing analyst at a tech company is tasked with enhancing the understanding of user behavior on their website. They need to implement a system that automatically inserts a specific event marker (event ID 999) between every pair of consecutive user actions recorded in the website's log files. This will help in accurately tracking and analyzing the sequence of user interactions, which is crucial for refining marketing strategies and improving the overall user experience on the site.", "persona": "ISTJ"}
{"realworld": "A system receives strings representing mathematical expressions with nested parentheses, separated by spaces. Each group needs to be analyzed to determine the deepest level of nesting for error checking and validation. For example, the string \"(()()) ((())) () ((())()())\" should result in the list [2, 3, 1, 3], indicating the deepest nesting level for each group.", "identity": "Person: A software developer working on a mathematical expression parser for a new programming language. They need to ensure that the parser can handle complex expressions with varying levels of nested parentheses for syntax validation and error reporting.", "persona": "INTJ"}
{"realworld": "A software company needs to process a large dataset of file names to identify and extract those that contain specific keywords for further analysis or action. The task involves filtering a list of file names to find those that include a particular substring, which could be a keyword related to the project's focus or a term indicating a certain type of data.", "identity": "A data analyst at a software company is tasked with processing a vast dataset of file names to pinpoint and extract those containing specific keywords for detailed analysis or targeted actions. This involves using programming skills to filter through a list of file names, identifying those that include a particular substring, which might be a keyword pertinent to the project's objectives or a term that denotes a specific category of data.", "persona": "INTJ"}
{"realworld": "A retail store needs to calculate the total cost and total quantity of items in a batch. Each item has a price represented by an integer. The store requires a function that, given a list of these integers representing item prices, returns both the sum (total cost) and the product (total quantity, assuming each price represents one item) of the items in the batch.", "identity": "A retail store manager, responsible for inventory and financial reporting, needs to quickly calculate the total cost and total quantity of items in a batch. Each item's price is recorded as an integer, and the manager requires a function that can process a list of these integers to return both the sum of the prices (total cost) and the count of the items (total quantity). This function will help in efficiently updating inventory records and financial summaries.", "persona": "ISTJ"}
{"realworld": "In financial trading, a trader needs to monitor the highest price reached within a moving window of stock prices to make timely buy or sell decisions. The problem is to efficiently compute the rolling maximum price for a list of stock prices over a specified time interval.", "identity": "A financial trader, Jane, is responsible for managing a portfolio of stocks. She needs to make quick buy or sell decisions based on the highest stock price reached within the last 30 minutes. To do this, she requires an efficient system that can continuously update and display the maximum stock price within this moving time window as new price data arrives.", "persona": "ESTJ"}
{"realworld": "Problem: In a digital marketing campaign, users are encouraged to create palindrome usernames for a new social media platform. The platform requires that all usernames be palindromes. Users often submit non-palindrome usernames, and the system needs to automatically convert these into the shortest possible palindromic usernames to ensure compliance with the platform's rules.", "identity": "Person: A digital marketing specialist at a tech startup launching a new social media platform. They are responsible for overseeing the campaign that encourages users to create palindrome usernames. They need to ensure that the system can efficiently convert non-palindrome submissions into valid palindromic usernames to maintain the platform's unique identity and user engagement.", "persona": "INTJ"}
{"realworld": "In a secure communication system, two parties need to exchange encrypted messages using a simple binary XOR encryption method. They have two binary strings representing the plaintext and the key. They require a function to perform the XOR operation on these strings to generate the ciphertext, which will then be transmitted securely.", "identity": "A cybersecurity analyst working for a small tech company needs to implement a basic encryption method for internal communications. The analyst has been tasked with creating a function that takes two binary strings (the plaintext message and the encryption key) as input and outputs the XOR-encrypted ciphertext. This ciphertext will be used to securely transmit sensitive data between team members over a network.", "persona": "INTJ"}
{"realworld": "In a content management system, determine the longest title among a list of article titles to prioritize display space, ensuring the first longest title is chosen if there are multiple titles of the same length, and handle cases where the list of titles is empty by returning no title.", "identity": "Name: Emily Carter\nRole: Web Content Manager\n\nEmily is responsible for managing the content on a popular news website. She needs to ensure that the titles of articles are displayed effectively on the homepage, prioritizing the display space for the longest titles. She has a list of article titles and must determine the longest title to feature prominently, ensuring that if there are multiple titles of the same length, the first one encountered is chosen. Additionally, she must handle scenarios where the list of titles might be empty by returning no title to avoid display errors.", "persona": "ISTJ"}
{"realworld": "Problem: In a manufacturing plant, two gears with 25 and 15 teeth respectively need to be synchronized for optimal performance. Determine the largest number of teeth that can align simultaneously to ensure smooth operation and minimal wear.", "identity": "Person: A mechanical engineer at the manufacturing plant tasked with optimizing gear systems to prevent operational issues and extend equipment life.", "persona": "ISTJ"}
{"realworld": "Problem: Develop a function that generates all possible prefixes of a given string in ascending order of their lengths. This function is essential for applications like text processing, where identifying all possible starting segments of a string can be useful for pattern matching, auto-completion, and string analysis.", "identity": "Person: Alice, a software developer working on a text processing application.\n\nDescription: Alice is tasked with enhancing the functionality of a text processing application used for tasks like auto-completion and pattern matching. She needs to implement a function that efficiently generates all possible prefixes of a given string, sorted by their lengths, to improve the application's performance and accuracy in handling user inputs and analyzing text data.", "persona": "INTJ"}
{"realworld": "Problem: A web application requires a feature to generate a string of numbers from 0 to a user-specified limit, separated by spaces, for display in a user interface. The current implementation lacks this functionality, and users need to see a sequence of numbers for various tasks such as selecting items in a list or setting up a countdown timer.", "identity": "Person: A software developer working on a web application for a productivity tool. They need to implement a feature that generates a sequence of numbers for users to easily select items or set timers, enhancing the user interface and user experience.", "persona": "INTJ"}
{"realworld": "A company is developing a text analysis tool for market research. They need to determine the number of unique characters in product names across different regions to understand cultural preferences and potential brand conflicts. The tool must ignore case differences to ensure accurate comparisons.", "identity": "A data analyst at the company, responsible for refining the text analysis tool's algorithms to accurately count unique characters in product names while disregarding case sensitivity, ensuring the tool can effectively analyze and compare brand names across various cultural and regional contexts.", "persona": "ISTJ"}
{"realworld": "The problem is to develop a function that parses a string representing musical notes in a specific ASCII format and converts it into a list of integers, where each integer represents the number of beats each note lasts. The input string uses different characters to denote different types of notes, and the function needs to correctly interpret these characters and convert them into their corresponding beat values.", "identity": "Person: A software developer working on a music notation application.\n\nDescription: This developer is tasked with creating a feature that allows users to input musical notes using a simplified ASCII notation. The input string contains various characters representing different note durations (e.g., 'w' for whole note, 'h' for half note, etc.). The developer needs to implement a function that accurately parses this string and converts each note character into its corresponding number of beats, which will be stored in a list for further processing in the application.", "persona": "INTJ"}
{"realworld": "In a large dataset of DNA sequences, scientists need to determine how frequently a specific genetic marker appears, including overlapping occurrences, to understand its prevalence and potential impact on certain diseases.", "identity": "A bioinformatics researcher at a leading genetics lab is tasked with analyzing a vast dataset of DNA sequences to identify the frequency of a particular genetic marker, including overlapping instances. This marker is suspected to be a key factor in the development of a specific disease, and understanding its prevalence across different populations could lead to targeted treatments and preventive measures.", "persona": "INTJ"}
{"realworld": "In a data entry system, users input numbers as text (e.g., 'one', 'two') instead of numerical values. The system needs to sort these textual numbers correctly from smallest to largest for reporting purposes.", "identity": "A data analyst working for a market research firm encounters a dataset where survey responses regarding age groups are entered as text (e.g., 'twenty', 'thirty'). They need to sort these textual age groups numerically for accurate demographic analysis and reporting.", "persona": "ISTJ"}
{"realworld": "In a financial trading system, identify the two most closely priced stocks from a list of real-time stock prices to determine potential arbitrage opportunities.", "identity": "A financial analyst working for an investment firm needs to quickly identify the two stocks with the closest prices from a dynamic list of real-time stock prices to explore potential arbitrage opportunities.", "persona": "ISTP"}
{"realworld": "In a data analysis project, a researcher needs to normalize a dataset of temperature readings from various sensors to a common scale for easier comparison and analysis. The original temperatures range from -10\u00b0C to 40\u00b0C, and the researcher wants to rescale these values so that the minimum temperature becomes 0 and the maximum becomes 1, to simplify the interpretation and processing of the data.", "identity": "A data analyst working on a climate research project needs to standardize temperature readings from multiple sensors across different locations. The raw data varies from -10\u00b0C to 40\u00b0C, and the analyst aims to transform these readings onto a scale where the lowest temperature is represented as 0 and the highest as 1, facilitating direct comparison and analysis of temperature patterns without the complexity of negative values and varying ranges.", "persona": "INTJ"}
{"realworld": "A data processing system receives a list of mixed data types from various sources and needs to extract and process only the integer values for further analysis. The system must efficiently filter out non-integer values to ensure accurate data handling and avoid processing errors.", "identity": "A data analyst working for a financial firm is tasked with analyzing transaction data from multiple sources. The data includes various formats such as strings, floats, and integers. To perform accurate financial calculations, the analyst needs to extract and process only the integer values representing transaction amounts, filtering out all other data types to prevent errors in the analysis.", "persona": "ISTJ"}
{"realworld": "Problem: In a large-scale data processing system, accurately determining the length of strings is crucial for efficient memory allocation and data indexing. However, the current system lacks a reliable method to consistently and efficiently calculate string lengths across various data sources and formats. This inconsistency leads to memory wastage and performance bottlenecks, affecting the overall system performance and user experience.", "identity": "Person: A software engineer at a tech company specializing in big data analytics. They are responsible for maintaining and optimizing the data processing pipelines that handle terabytes of data daily from diverse sources like social media, financial records, and IoT devices. The engineer is tasked with improving the system's efficiency by addressing the issue of inconsistent string length calculations, which is causing inefficiencies in memory usage and data processing speeds.", "persona": "INTJ"}
{"realworld": "Problem: Determine the largest integer that can evenly divide a given number n, excluding n itself. For example, for the number 15, the largest divisor smaller than 15 is 5.", "identity": "Person: A competitive programmer preparing for an upcoming coding competition. They are practicing problems related to number theory and optimization, and this specific problem is part of their practice set. They need to efficiently solve this problem to improve their algorithmic skills and speed, as it involves finding the largest divisor of a number quickly and accurately.", "persona": "INTJ"}
{"realworld": "Problem: Develop a function that efficiently decomposes a given integer into its prime factors, listing each factor as many times as it appears in the factorization, and ensuring the product of these factors equals the original number. The function should handle large integers and maintain performance for practical use in applications like cryptography, number theory research, and data analysis.", "identity": "Person: Alice, a software engineer specializing in cryptography and data security, is tasked with developing a prime factorization function for a new encryption algorithm. This function needs to efficiently handle large integers to ensure the security and performance of the encryption system, as well as support various research and analysis tasks within her company.", "persona": "INTJ"}
{"realworld": "In a large dataset of customer IDs, some IDs are duplicated multiple times. The task is to clean the dataset by removing all duplicate IDs while preserving the order of the remaining unique IDs.", "identity": "A data analyst working for an e-commerce company needs to clean a customer database to ensure accurate reporting and analysis. The dataset contains thousands of customer IDs, some of which are repeated due to system errors or data entry mistakes. The analyst must develop a script or use a data manipulation tool to identify and remove these duplicates, ensuring that the first occurrence of each unique ID is retained in its original order. This process is crucial for maintaining data integrity and improving the efficiency of future data operations.", "persona": "ISTJ"}
{"realworld": "Problem: In a document management system, users need to convert the case of text in scanned documents for consistency and readability. For example, all headers should be in lowercase and all body text in uppercase.", "identity": "Person: A data entry specialist working for a legal firm. They need to ensure that all scanned legal documents are formatted correctly for consistency and readability, with headers in lowercase and body text in uppercase, to meet the firm's document management standards.", "persona": "ISTJ"}
{"realworld": "Problem: In a large-scale data processing system, multiple text files need to be combined into a single file for easier analysis. Each text file contains a segment of data that must be concatenated in a specific order to maintain data integrity. The system requires a function that can efficiently concatenate these segments into one cohesive string.", "identity": "Person: A data analyst working for a multinational corporation. They are responsible for managing and analyzing large datasets that are split across various text files. These files need to be merged in a specific sequence to ensure the data's chronological and logical integrity. The analyst needs to develop or implement a function that can quickly and accurately concatenate these text files into a single, unified dataset for further analysis and reporting.", "persona": "ISTJ"}
{"realworld": "In a large dataset of filenames, you need to quickly identify and retrieve all filenames that start with a specific prefix for a data analysis task.", "identity": "A data analyst working on a project that requires them to extract and analyze files related to a particular research topic. They need to quickly filter out all the relevant files from a massive database by identifying filenames that begin with a specific prefix, which indicates the files' relevance to the topic.", "persona": "ISTJ"}
{"realworld": "A financial analyst needs to filter out negative profit values from a list of daily profits to focus on days with positive financial outcomes for trend analysis and reporting.", "identity": "A financial analyst, Sarah, is tasked with analyzing the daily profit trends of a company over the past year. She needs to filter out days where the company reported negative profits to focus her analysis and reporting on days with positive financial outcomes, helping to identify growth patterns and areas for potential improvement.", "persona": "ISTJ"}
{"realworld": "Problem: A cybersecurity firm needs to generate a list of prime numbers for use in cryptographic key generation. They require a reliable method to determine if a given number is prime to ensure the security of their encryption algorithms.", "identity": "Person: Alice, a cybersecurity analyst at the firm, is tasked with developing an efficient algorithm to check the primality of numbers for cryptographic key generation. She needs to ensure the method is both accurate and fast to maintain the security and performance of the encryption systems.", "persona": "INTJ"}
{"realworld": "Problem: Implement a function `find_zero` that accurately finds a zero point of a polynomial defined by a list of coefficients, ensuring the polynomial has an even number of coefficients and the largest non-zero coefficient guarantees a solution. The function should handle various polynomials and return a zero point with high precision.", "identity": "Person: A software developer working on a numerical analysis project for a tech company. They need to implement the `find_zero` function to solve polynomial equations efficiently, ensuring accuracy and robustness for a variety of polynomial inputs. This function is crucial for the company's new data analysis tool, which relies on precise mathematical computations.", "persona": "INTJ"}
{"realworld": "A company maintains a list of employee performance scores, where each employee is represented by three scores: productivity, teamwork, and innovation. The company wants to sort the scores of each category (productivity, teamwork, and innovation) separately for better analysis, but keep the overall structure of the list intact. This means that the scores at indices not divisible by three (which represent the employee's overall performance) should remain unchanged, while the scores at indices divisible by three (productivity, teamwork, and innovation) should be sorted within their respective categories.", "identity": "John is a data analyst at a mid-sized tech company. He has been tasked with organizing a large dataset of employee performance scores for a comprehensive review by the HR department. The dataset is structured such that every employee is represented by four scores: an overall performance score at every fourth index, and three specific scores (productivity, teamwork, and innovation) at the other indices. John needs to sort the specific scores (productivity, teamwork, and innovation) separately while ensuring that the overall performance scores remain in their original positions for accurate analysis and reporting.", "persona": "ISTJ"}
{"realworld": "In a data analysis project, a researcher needs to clean and deduplicate a large dataset containing repeated measurements of various parameters. The dataset is represented as a list of integers, and the researcher requires a sorted list of unique values to perform accurate statistical analysis and visualization.", "identity": "A data scientist working on a climate research project has received a large, unsorted dataset from multiple weather stations, containing repeated temperature readings. They need to clean this dataset by removing duplicates and sorting the unique temperature values to accurately analyze trends and create visualizations for their report.", "persona": "ISTJ"}
{"realworld": "In a financial application, users need to determine the highest transaction amount from a list of daily transactions to identify the peak spending or earning event.", "identity": "A financial analyst at a retail company is tasked with analyzing daily sales data to identify the highest transaction amount each month, helping the company understand peak spending patterns and optimize inventory and marketing strategies.", "persona": "INTJ"}
{"realworld": "In a large financial institution, there is a need to identify and count the number of transactions that are either multiples of 11 or 13, and specifically track how often the digit '7' appears in these transaction amounts. This is crucial for auditing purposes to ensure compliance with specific financial regulations that require detailed analysis of certain transaction patterns.", "identity": "A Financial Analyst at a large bank tasked with auditing transaction data to identify and count transactions that are multiples of 11 or 13, and to track the frequency of the digit '7' in these amounts for regulatory compliance.", "persona": "ISTJ"}
{"realworld": "In a manufacturing process, a list of component specifications is recorded, with each specification at an even index and its corresponding status at the odd index. The problem is to ensure that the specifications are always in ascending order while keeping the statuses aligned with their original specifications.", "identity": "A quality control inspector at a manufacturing plant is responsible for maintaining the accuracy of a list of component specifications and their statuses. The list is structured such that each specification is followed by its status in an alternating pattern. The inspector must ensure that the specifications are sorted in ascending order without disrupting the alignment of each status with its corresponding specification. This task requires careful handling of the data to avoid errors in the production process.", "persona": "ISTJ"}
{"realworld": "A secure messaging system uses the `encode_cyclic` function to encrypt messages by cycling groups of three characters. However, the system's users are unable to read their own messages after encryption because there is no corresponding `decode_cyclic` function to decrypt the messages back to their original form.", "identity": "A software developer named Alex is responsible for maintaining and improving a secure messaging application. They recently discovered that the application's encryption method, which relies on the `encode_cyclic` function, does not have a corresponding decryption function. As a result, users are unable to read their own encrypted messages, leading to confusion and frustration among the user base. Alex needs to implement a `decode_cyclic` function to reverse the encryption and allow users to read their messages in their original form.", "persona": "INTJ"}
{"realworld": "In a cybersecurity context, a system requires a sequence of highly secure keys for encrypting sensitive data. The keys must be both Fibonacci numbers and prime numbers to ensure their strength and uniqueness. The problem is to efficiently generate the n-th key in this sequence to meet the system's security requirements.", "identity": "A cybersecurity analyst at a financial institution tasked with developing a robust encryption system for highly sensitive transaction data. The system demands keys that are both Fibonacci and prime numbers to enhance security. The challenge is to create an algorithm that quickly identifies and generates the n-th key in this unique sequence to maintain the system's operational efficiency and security integrity.", "persona": "INTJ"}
{"realworld": "In a financial institution, detecting fraudulent transactions is crucial. The problem is to identify if there are any sets of three transactions in a list that sum to zero, indicating a potential money laundering scheme where funds are being cycled back to the original source.", "identity": "Afrah, a fraud analyst at a large bank, is tasked with reviewing a list of recent transactions to identify any suspicious patterns that could indicate money laundering. She needs to determine if there are any groups of three transactions that, when added together, equal zero, which could suggest a fraudulent cycle of funds.", "persona": "ISTJ"}
{"realworld": "In a straight, infinitely long road, there are two sets of n cars each, one moving left to right and the other moving right to left. All cars move at the same speed. Despite being infinitely sturdy and continuing their trajectories after collisions, the problem is to determine the total number of collisions that occur between the two sets of cars.", "identity": "A traffic analyst is studying the behavior of two streams of cars on an infinitely long, straight road. One stream consists of n cars moving from left to right, and the other stream consists of n cars moving from right to left, all at the same constant speed. The analyst's task is to calculate the total number of collisions that will occur between these two sets of cars, considering that each car maintains its trajectory and speed after a collision.", "persona": "INTJ"}
{"realworld": "A retail store needs to update its inventory system where all item quantities listed in a database need to be incremented by one to reflect recent stock replenishments.", "identity": "A retail store manager, responsible for overseeing the inventory and ensuring accurate stock levels, must update the database to reflect recent deliveries by incrementing each item's quantity by one.", "persona": "ISTJ"}
{"realworld": "Problem: In a financial transaction log, each entry represents a transaction amount. Determine if there are any transactions that perfectly offset each other, indicating a potential error or fraudulent activity where the same amount is debited and credited, possibly to different accounts.", "identity": "Person: A financial analyst at a bank, responsible for auditing transaction logs to identify anomalies and potential fraud. They use data analysis tools to compare transaction amounts and account details, looking for pairs of transactions that cancel each other out, which could signal unauthorized activities or accounting errors.", "persona": "ISTJ"}
{"realworld": "A software application requires converting numerical data from one base to another, specifically for bases less than 10, to facilitate data processing and storage. The current system lacks an efficient method to perform these conversions, leading to errors and inefficiencies in data handling.", "identity": "A data analyst working for a logistics company needs to convert numerical data from base 3 to base 9 for optimizing inventory tracking algorithms. The current manual conversion process is time-consuming and prone to errors, affecting the accuracy and efficiency of inventory management.", "persona": "INTJ"}
{"realworld": "A construction company needs to calculate the area of triangular spaces for planning and material estimation in various projects, such as landscaping, roofing, and flooring. They require a quick and accurate method to determine the area of triangles based on the length of a side and the corresponding height.", "identity": "A construction project manager at a building firm who frequently needs to estimate the area of triangular sections for tasks like designing roof pitches, planning garden layouts, and calculating flooring materials. They seek an efficient way to compute these areas using the simple formula involving the base length and height of the triangle.", "persona": "ISTJ"}
{"realworld": "The problem is to efficiently compute the n-th element of the Fib4 number sequence, which is defined by the recurrence relation fib4(n) = fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4) with initial values fib4(0) = 0, fib4(1) = 0, fib4(2) = 2, and fib4(3) = 0. The challenge is to implement this without using recursion to avoid the exponential time complexity associated with recursive solutions.", "identity": "A software developer working on a financial application needs to compute the n-th element of the Fib4 sequence efficiently. This sequence is used in a predictive model for financial forecasting, where the sequence's properties are leveraged to analyze market trends over time. The developer must implement an iterative approach to compute the n-th element without using recursion to ensure the algorithm runs in linear time, making it suitable for large values of n encountered in real-time data analysis.", "persona": "INTJ"}
{"realworld": "In a financial firm, analysts need to determine the median transaction amount each day to assess market trends. The list of transaction amounts can vary in length and may include outliers, making it crucial to accurately calculate the median to avoid skewed interpretations of daily market activity.", "identity": "A financial analyst at a trading firm, responsible for monitoring daily market trends by calculating the median transaction amount to ensure a balanced view of market activity, despite varying list lengths and potential outliers.", "persona": "ISTJ"}
{"realworld": "A company specializing in product naming needs a tool to quickly verify if proposed names are palindromes, as they aim to launch a new line of products with palindromic names to stand out in the market.", "identity": "A marketing manager at the company is tasked with overseeing the development of this tool to ensure it efficiently checks and approves names that are palindromes for their new product line.", "persona": "ENTJ"}
{"realworld": "Problem: Implement a function that efficiently computes \\(2^n \\mod p\\) for large values of \\(n\\) and \\(p\\), ensuring that the computation does not suffer from numerical instability or inefficiency due to large intermediate values.", "identity": "Person: A software developer working on a cryptographic application that requires frequent computation of large powers modulo a prime number. This is necessary for tasks such as key generation, encryption, and decryption in algorithms like RSA or Diffie-Hellman key exchange. The developer needs to ensure that the implementation is both efficient and numerically stable to handle the large values involved without performance bottlenecks or security vulnerabilities.", "persona": "INTJ"}
{"realworld": "A secure messaging system requires a simple encryption method to protect messages from unauthorized access. The system uses a character shift cipher where each letter in the message is shifted forward by 5 positions in the alphabet. However, the system needs a corresponding decryption method to allow authorized users to read the original messages.", "identity": "A software developer named Alex is tasked with implementing a decryption function for a secure messaging system. The system currently encrypts messages using a character shift cipher that shifts each letter forward by 5 positions in the alphabet. Alex needs to create a decryption method that shifts each letter backward by 5 positions to restore the original message for authorized users.", "persona": "ISTP"}
{"realworld": "A company needs to anonymize sensitive data by removing identifiable information from text records, specifically names and personal identifiers that often contain vowels. They require a solution to efficiently strip vowels from any given text to ensure compliance with privacy regulations.", "identity": "A data privacy officer at a healthcare company is tasked with ensuring patient confidentiality by anonymizing medical records. They need a tool to automatically remove vowels from names and personal identifiers in text to prevent identification and comply with HIPAA regulations.", "persona": "INTJ"}
{"realworld": "A company needs to ensure that all daily sales figures reported by its branches are below a specified safety threshold to manage financial risks effectively.", "identity": "A financial risk manager at a retail company must regularly monitor and verify that the daily sales data submitted by each branch does not exceed a predefined limit to maintain financial stability and prevent overexposure to market fluctuations.", "persona": "ISTJ"}
{"realworld": "Problem: A financial application requires a function to accurately calculate the total amount of money in a user's account after multiple deposits and withdrawals. The current implementation of the add function is used to sum up these transactions, but it has been found to occasionally produce incorrect totals due to data type mismatches or unexpected input values.", "identity": "Person: Jane Doe, a software developer at a fintech company, is responsible for maintaining and improving the financial application used by thousands of customers. She has been tasked with addressing the issue of incorrect account totals caused by the add function's vulnerabilities to data type mismatches and unexpected input values. Jane needs to refactor the function to ensure it handles all transaction types correctly and consistently, thereby maintaining the integrity of the users' financial data.", "persona": "ISTJ"}
{"realworld": "Problem: Determine if two given strings contain exactly the same set of characters, regardless of their order or frequency in each string.", "identity": "Person: A software developer working on a text analysis tool that needs to compare user-submitted strings for character set equality, ignoring the order and frequency of characters.", "persona": "INTJ"}
{"realworld": "Problem: A financial institution wants to predict future investment returns based on historical data using the Fibonacci sequence. They need to calculate the n-th Fibonacci number efficiently to model potential growth patterns in their portfolios.", "identity": "Person: A quantitative analyst at a financial institution who specializes in algorithmic trading and portfolio management. They are tasked with developing a predictive model that leverages the Fibonacci sequence to forecast investment returns and optimize asset allocation strategies.", "persona": "INTJ"}
{"realworld": "In a software development project, ensuring that XML files are correctly formatted is crucial for data integrity and system functionality. The problem is to verify that every opening XML tag in a set of files has a corresponding closing tag, which can be abstracted as checking if every \"<\" in a string has a matching \">\".", "identity": "Name: Emily Rodriguez\nOccupation: Software Quality Assurance Engineer\nBackground: Emily has been working in the tech industry for over five years, specializing in ensuring software products meet high standards of quality and functionality. She is currently involved in a project that involves handling large datasets in XML format, which are critical for the system's operations.\nSituation: Emily is tasked with developing a robust testing framework to validate XML files within a new software application. Her primary challenge is to create a mechanism that verifies the integrity of XML structures by ensuring that every opening tag has a corresponding closing tag, thus preventing data corruption and system malfunctions.", "persona": "ISTJ"}
{"realworld": "A financial analyst needs to determine if a stock's price history over a period is consistently increasing or decreasing to assess the stock's market trend and make investment decisions.", "identity": "A financial analyst, Sarah, is tasked with evaluating the performance trend of a particular stock over the past five years. She needs to determine if the stock's price has been consistently increasing or decreasing during this period to assess its market trend accurately. This analysis will help her advise clients on whether to invest in the stock, considering its historical performance and potential future growth.", "persona": "ISTJ"}
{"realworld": "In a large e-commerce platform, two lists of product IDs are generated daily: one from the inventory system and another from the sales system. The platform needs to identify and reconcile the common product IDs between these lists to ensure accurate inventory tracking and sales reporting.", "identity": "A data analyst at the e-commerce platform is responsible for daily reconciliation of product IDs between the inventory and sales systems. They use SQL queries and data visualization tools to compare the lists, identify discrepancies, and report findings to the inventory and sales teams for corrective actions.", "persona": "ISTJ"}
{"realworld": "Problem: In a manufacturing company, the efficiency of a production line is determined by the largest prime factor of a composite number representing the total number of components produced. Identifying this largest prime factor helps in optimizing the production process by focusing on the most critical bottleneck. However, the current method for finding this factor is time-consuming and often leads to delays in decision-making.", "identity": "Person: A production manager at the manufacturing company who is responsible for overseeing the efficiency of the production line and needs to quickly identify the largest prime factor of a given composite number to streamline the production process and reduce bottlenecks.", "persona": "INTJ"}
{"realworld": "A financial analyst needs to calculate the total amount of money saved over a period of months, where the savings increase by a fixed amount each month. For example, if the savings start at $1 in the first month and increase by $1 each subsequent month, the total savings by the 30th month need to be computed efficiently.", "identity": "A financial analyst at a personal finance company is tasked with calculating the cumulative savings of a client who follows a systematic savings plan. The client saves $1 in the first month and increases the savings by $1 each month. The analyst needs to determine the total savings by the 30th month to project the client's financial growth and advise on future savings strategies.", "persona": "ISTJ"}
{"realworld": "In a financial transaction system, ensuring that every opening transaction (e.g., a purchase or deposit) has a corresponding closing transaction (e.g., a sale or withdrawal) is crucial for maintaining accurate financial records and preventing discrepancies. The system must verify that each transaction is properly balanced to ensure financial integrity and compliance with accounting standards.", "identity": "A financial analyst at a large bank is responsible for auditing the transaction logs to ensure that every opening transaction has a corresponding closing transaction. This task is critical to maintain the bank's financial integrity and to comply with regulatory requirements. The analyst uses specialized software to match transactions and identifies any discrepancies that need to be resolved to prevent financial misreporting and potential legal issues.", "persona": "ISTJ"}
{"realworld": "In a manufacturing company, the production rate of a product is modeled by a polynomial function where the coefficients represent different factors affecting production. The company needs to determine the rate of change (derivative) of the production rate with respect to time to optimize production schedules and resource allocation.", "identity": "A manufacturing engineer at the company is tasked with analyzing the polynomial model of the production rate to calculate its derivative with respect to time. This analysis will help in understanding how changes in time affect production speed and in making informed decisions about scheduling and resource management to enhance efficiency and meet production targets.", "persona": "INTJ"}
{"realworld": "A financial analyst needs to predict the quarterly revenue of a tech company using a model similar to the Fibonacci sequence, where the revenue for the current quarter is the sum of the revenues from the previous three quarters. This model helps in forecasting future revenues based on historical data, which is crucial for investment decisions and market analysis.", "identity": "A financial analyst specializing in tech sector investments is tasked with developing a predictive model for a tech company's quarterly revenue. The model uses a sequence similar to the Fibonacci series, where each quarter's revenue is calculated as the sum of the revenues from the three preceding quarters. This approach aids in accurately forecasting future revenue trends, which is essential for making informed investment choices and conducting thorough market analyses.", "persona": "INTJ"}
{"realworld": "The function `vowels_count` is designed to count the number of vowels in a given string, considering 'y' as a vowel only if it is at the end of the word. However, the current test cases provided do not cover various edge cases and scenarios where 'y' might be incorrectly counted or other vowels might be missed. There is a need to add more comprehensive test cases to ensure the function's accuracy and robustness.", "identity": "Person: A software developer or QA engineer responsible for maintaining and improving the quality of the `vowels_count` function. They need to identify and create additional test cases that cover edge scenarios involving 'y' as a vowel and other potential issues with vowel counting, to ensure the function works correctly under various conditions.", "persona": "ISTJ"}
{"realworld": "A digital security system uses a circular shift function to encode access codes. The system requires that after a certain number of failed access attempts, the access code is automatically updated by shifting its digits. However, the system has a vulnerability where if the shift value exceeds the number of digits in the code, the code becomes the reverse of its original form, potentially making it easier for unauthorized users to guess the new code.", "identity": "A system administrator at a large tech company is responsible for maintaining the digital security system that uses the circular shift function for access codes. They must ensure the system's integrity and prevent unauthorized access by addressing the vulnerability where excessive shift values reverse the access code, making it susceptible to being guessed by unauthorized users.", "persona": "ISTJ"}
{"realworld": "Problem: Develop a function that calculates the sum of ASCII values of uppercase characters in a given string.", "identity": "Person: A software developer working on a text processing application that requires analyzing ASCII values of characters for data encryption purposes.", "persona": "INTJ"}
{"realworld": "In a fruit basket containing apples, oranges, and mangoes, given a string that specifies the number of apples and oranges and an integer representing the total number of fruits, determine the number of mangoes in the basket. For example, if the string is \"5 apples and 6 oranges\" and the total number of fruits is 19, the number of mangoes would be 8.", "identity": "A grocery store manager receives a shipment of mixed fruits daily. The shipment details include a string specifying the number of apples and oranges, and a separate count for the total number of fruits. The manager needs to quickly calculate the number of mangoes in each shipment to manage inventory and ensure stock levels are accurate. For instance, if the string indicates \"7 apples and 4 oranges\" and the total fruit count is 18, the manager must determine that there are 7 mangoes in that particular shipment.", "persona": "ISTJ"}
{"realworld": "In a warehouse inventory management system, each shelf is represented as an array of non-negative integers where each integer represents the quantity of a specific item type. The system needs to identify and remove the item type with the smallest even quantity for restocking purposes. If there are multiple items with the same smallest even quantity, the item with the smallest index (earliest on the shelf) should be chosen. The system must return the quantity and the position of the item to be removed, or indicate if there are no items to be removed due to an empty shelf or lack of even quantities.", "identity": "**Person:** A warehouse inventory manager named Alex.\n\n**Description:** Alex is responsible for overseeing the inventory in a large warehouse. Each day, Alex uses the warehouse's inventory management system to identify items that need restocking. The system displays shelves as arrays of integers, where each integer represents the quantity of a specific item type. Alex's task is to find and remove the item type with the smallest even quantity for restocking. If multiple items have the same smallest even quantity, Alex needs to choose the one that appears first on the shelf. If the shelf is empty or contains no even quantities, Alex must note this and take appropriate action.", "persona": "ISTJ"}
{"realworld": "In a data center, servers are assigned priority levels represented by positive integers. The reliability of a server is determined by the frequency of its priority level in the system. A server is considered highly reliable if its priority level appears at least as many times as the value of the priority itself. The task is to identify the highest priority level that meets this reliability criterion, or determine that no such priority level exists.", "identity": "A data center technician, Alex, is responsible for monitoring server reliability. They have a list of servers with assigned priority levels and need to determine the highest priority level that meets the reliability criterion, which is based on the frequency of the priority level in the system. If no priority level meets this criterion, Alex must report that there is no such priority level.", "persona": "ISTJ"}
{"realworld": "In a data analysis project, a researcher needs to sort a list of temperature readings from a sensor in a unique way to identify patterns. The sorting method required alternates between the minimum and maximum values of the remaining readings, starting with the minimum. This helps in visualizing the temperature extremes and their sequence over time, which is crucial for understanding potential anomalies in the data.", "identity": "A climate scientist, working on a project to study temperature fluctuations in a sensitive ecological area, needs to analyze a series of temperature readings from a remote sensor. To better understand the patterns and potential anomalies, such as sudden spikes or drops, the scientist must sort the data in an alternating sequence of minimum and maximum values. This unique sorting method helps in identifying the sequence of extreme temperatures and their impact on the local environment, which is essential for predicting ecological responses and planning conservation efforts.", "persona": "INTJ"}
{"realworld": "A civil engineer needs to calculate the area of triangular plots of land for planning construction projects. The plots are defined by their side lengths, but some combinations of lengths do not form valid triangles. The engineer requires a function that returns the area of valid triangles rounded to two decimal points and indicates invalid triangles with a return value of -1.", "identity": "A civil engineer named Alex is working on a project where they need to determine the usable land area for various construction sites. These sites are often irregularly shaped, but many are triangular. Alex has a database of land plots, each defined by three side lengths. However, not all sets of side lengths can form a valid triangle due to the triangle inequality theorem. Alex needs a reliable function that can quickly calculate the area of these triangular plots if they are valid, using the side lengths, and return -1 for any set of lengths that cannot form a triangle. This function must round the area to two decimal places for consistency and ease of use in planning and budgeting.", "persona": "ISTJ"}
{"realworld": "Problem: Determine if a drone configuration can fly based on its weight distribution and total weight. The drone can fly if its weight distribution is balanced (symmetric) and the total weight does not exceed a specified maximum weight limit.", "identity": "Person: An aerospace engineer working for a drone manufacturing company. They need to ensure that each drone model meets safety and performance standards by verifying that the weight distribution is balanced and the total weight is within the specified limits before production.", "persona": "ISTJ"}
{"realworld": "In a manufacturing process, a sequence of components is assembled in a specific order. To ensure the integrity and symmetry of the final product, the sequence must be palindromic, meaning it reads the same forwards and backwards. The challenge is to determine the minimum number of components that need to be replaced to achieve this palindromic sequence, given the current arrangement of components.", "identity": "A quality control manager at a manufacturing plant is responsible for ensuring that the final assembled product maintains its structural integrity and aesthetic symmetry. The product is made by assembling components in a specific sequence, and it is crucial that this sequence is palindromic. The manager has identified that the current sequence of components does not meet this requirement. Their task is to analyze the existing sequence, determine which components need to be replaced, and calculate the minimum number of replacements required to transform the sequence into a palindromic one. This ensures the final product meets the quality standards and functions as intended.", "persona": "ISTJ"}
{"realworld": "In a digital marketing agency, two teams are tasked with creating content for different campaigns. Each team submits a list of content pieces (strings) they've prepared. The agency needs to determine which team's content, in total, uses fewer characters to ensure cost-efficiency in ad placements, where character limits affect costs. If both teams' content uses the same total number of characters, the agency defaults to using the content from the first team.", "identity": "John is a project manager at a digital marketing agency. He oversees two content creation teams, Team A and Team B, each responsible for producing different sets of ad content. John receives the lists of content pieces from both teams and needs to calculate the total number of characters used by each team to decide which team's content is more cost-effective for ad placements, considering character limits directly impact advertising costs. If both teams' content totals the same number of characters, he will choose Team A's content by default.", "persona": "ISTJ"}
{"realworld": "The problem is to develop a function that determines if a given number less than 100 is the product of exactly three distinct prime numbers. For example, the function should return True for 30 because 30 can be expressed as 2 * 3 * 5, where 2, 3, and 5 are all prime numbers.", "identity": "Person: Alice, a high school math teacher, is preparing a lesson on prime numbers and factorization for her advanced algebra class. She wants to include a challenging exercise where students must determine if a number is the product of exactly three distinct prime numbers. To facilitate this, she needs a function that can quickly check this condition for numbers less than 100, ensuring her students can verify their answers efficiently during the lesson.", "persona": "INTJ"}
{"realworld": "Problem: Develop a function to determine if a given number \\( x \\) is a simple power of another number \\( n \\). This function should return true if \\( x \\) can be expressed as \\( n \\) raised to an integer power, and false otherwise.", "identity": "Person: Alice, a software developer working on a mathematical analysis tool for a research lab, needs to implement this function to enhance the tool's capability to analyze and categorize numerical data efficiently.", "persona": "INTJ"}
{"realworld": "A logistics company needs to optimize storage space in their warehouses. They have a variety of packages with different volumes, and they want to determine which packages can be stacked in a cubic arrangement to maximize space utilization. They need a method to quickly identify which package sizes can be perfectly arranged in a cubic space to avoid wasted space and improve inventory management.", "identity": "A warehouse manager at the logistics company, experienced in inventory management and spatial optimization, is tasked with developing a system to identify and categorize packages that can be stacked in cubic arrangements. This involves analyzing package dimensions, creating algorithms to match compatible sizes, and implementing a software solution to streamline the process across multiple warehouse locations.", "persona": "INTJ"}
{"realworld": "You are tasked with developing a function that takes a hexadecimal number as a string and counts the number of hexadecimal digits that are prime numbers. The prime digits in hexadecimal are 2, 3, 5, 7, B (11 in decimal), and D (13 in decimal). The function should handle inputs that are always correct or empty strings, and the hexadecimal symbols A, B, C, D, E, F are always uppercase.", "identity": "You are a software developer working for a tech company that specializes in data analysis tools. Your team has been assigned a project to enhance the functionality of a data processing library used by various clients. One of the new features requested is a function that can analyze hexadecimal data strings and count the occurrences of prime digits within them. This function will be integrated into the library to assist in more detailed data profiling and analysis. You need to ensure that the function is efficient, handles edge cases like empty strings gracefully, and is well-documented for future maintenance and understanding by other team members.", "persona": "INTJ"}
{"realworld": "Problem: Develop a function that converts a given decimal number to a binary string, encapsulated by special characters 'db' at both the beginning and the end, to aid in format identification.", "identity": "Person: A software developer working on a data processing application that requires a unique format for binary data representation. This developer needs to ensure that the binary strings are easily identifiable within the data stream, so they decide to encapsulate them with 'db' characters for clarity and parsing purposes.", "persona": "INTJ"}
{"realworld": "In a digital content monitoring system, the task is to determine if a given string of user-generated text meets the platform's content guidelines. A string is considered \"happy\" if it does not contain any repetitive sequences of three consecutive letters, which could indicate spam or malicious content. The system needs to quickly and accurately assess whether a string is \"happy\" to maintain a safe and engaging environment for users.", "identity": "A social media platform's content moderator, responsible for ensuring that user posts adhere to community guidelines by using a digital content monitoring system to filter out spam and malicious content. The system checks for \"happiness\" by detecting repetitive sequences of three consecutive letters, which are flagged for review or removal to uphold the platform's standards for user engagement and safety.", "persona": "ISTJ"}
{"realworld": "The teacher needs to convert a list of student GPAs into corresponding letter grades using a specific grading scale, but she has lost her grading algorithm code and needs a new function to perform this conversion.", "identity": "A computer science teacher at a high school has misplaced her Python script that automatically converts a list of student GPAs into letter grades according to the school's grading scale. She needs to quickly recreate this function to continue with her grading tasks.", "persona": "INTJ"}
{"realworld": "Problem: Develop a system to categorize passwords based on their length, where passwords with a prime number of characters are considered more secure. This system needs to efficiently determine if the length of a given password is prime to ensure accurate security assessments.", "identity": "Person: Alice, a cybersecurity analyst at a tech company, tasked with implementing a password security enhancement program. She needs to develop an efficient algorithm to check if a password's length is prime, as part of a new security feature aimed at improving user account protection.", "persona": "INTJ"}
{"realworld": "Problem: Determine the number of n-digit positive integers that either start or end with the digit 1.", "identity": "Person: A computer science student working on a coding challenge or a mathematician analyzing number patterns.", "persona": "INTJ"}
{"realworld": "Problem: In a digital library system, users need to quickly verify the integrity of large numerical identifiers (up to 10,000) by converting the sum of their digits into a binary format for easy comparison and error detection. Develop a function that takes a positive integer N and returns the binary representation of the sum of its digits.", "identity": "Person: A software developer working on enhancing the functionality of a digital library system. This developer is tasked with creating a utility function that simplifies the verification process for large numerical identifiers by converting the sum of their digits into a binary format, aiding in quick error detection and integrity checks.", "persona": "INTJ"}
{"realworld": "A company is tracking the performance of its employees using a list where each element represents the number of tasks completed by an employee in a week. The list contains integers, and the indices represent the weeks. The company wants to calculate the total number of tasks completed by employees who worked on even-numbered tasks (even elements) during odd-numbered weeks (odd indices) to analyze the performance of these specific conditions.", "identity": "A data analyst named Alex is tasked with analyzing the performance data of employees at a tech company. The company has a dataset where each entry corresponds to the number of tasks completed by an employee in a given week. The dataset is structured as a list of integers, where the index of each integer represents the week number. Alex needs to extract and sum the number of tasks completed by employees who worked on even-numbered tasks during odd-numbered weeks to understand the productivity under these specific conditions.", "persona": "ISTJ"}
{"realworld": "Problem: Develop a function that processes a given string by sorting the characters within each word in ascending ASCII order while maintaining the original order of words and spaces in the sentence. For example, the input \"Hello World!!!\" should produce \"Hello !!!Wdlor\".", "identity": "Person: A software developer working on a text processing application for a linguistics research project. They need to implement a feature that analyzes the structure of words by their ASCII character order while preserving the sentence's overall layout. This function will help in studying how different character arrangements affect readability and comprehension in written language.", "persona": "INTJ"}
{"realworld": "You are tasked with analyzing a dataset represented as a list of lists, where each sublist can have a variable number of elements. Your goal is to identify all occurrences of a specific integer within this dataset and return their coordinates in a specific format. The coordinates should be sorted first by the row index in ascending order, and within each row, by the column index in descending order.", "identity": "You are a data analyst working for a tech company that processes large datasets. You've been given a complex dataset in the form of a list of lists, where each sublist contains integers and can vary in length. Your task is to pinpoint all instances of a particular integer within this dataset and report their positions in a structured manner. The positions need to be sorted by row index in ascending order, and for each row, by column index in descending order. This detailed analysis is crucial for the company's upcoming project, which involves data visualization and pattern recognition.", "persona": "ISTJ"}
{"realworld": "In a financial institution, there is a need to process transaction logs efficiently. The logs are represented as arrays of non-negative integers, where each integer represents the amount of a transaction. The sorting order of these logs is determined dynamically based on the sum of the first and last transaction amounts in the array. If this sum is odd, the logs should be sorted in ascending order to prioritize smaller transactions. If the sum is even, the logs should be sorted in descending order to prioritize larger transactions. This sorting method ensures that the processing strategy adapts to the nature of the transactions at the endpoints of the log array.", "identity": "**Person:** A software engineer at a financial institution tasked with developing an algorithm to efficiently sort transaction logs based on the dynamic criteria described. This engineer needs to implement a solution that can handle large volumes of transaction data quickly and accurately, ensuring that the processing strategy aligns with the institution's priorities regarding transaction size and frequency.", "persona": "INTJ"}
{"realworld": "In a secure communication system, messages need to be encrypted using a rotation cipher where each letter in the alphabet is shifted by a dynamic value calculated as two times two (i.e., four places). This encryption method ensures that the original content of the messages remains confidential and protected from unauthorized access.", "identity": "A cybersecurity analyst at a financial institution is tasked with implementing a secure communication protocol for sensitive data exchange between branches. To enhance data protection, the analyst decides to use a rotation cipher with a dynamic shift value of four places for encrypting messages, ensuring that all communications are secure and resistant to unauthorized decryption attempts.", "persona": "ISTJ"}
{"realworld": "In a manufacturing plant, there is a need to monitor the performance of machines. Each machine's performance is recorded as an integer representing its efficiency score. The plant manager wants to identify the second least efficient machine to prioritize maintenance and prevent potential breakdowns. Develop a function that, given a list of efficiency scores, returns the second smallest score to help in identifying the machine for maintenance. If there is no second smallest score (e.g., all machines have the same score or the list is empty), the function should return None.", "identity": "**Person Encountering the Problem:**\n\n**Name:** Alex Johnson\n**Role:** Plant Manager at a manufacturing facility\n**Situation:** Alex is responsible for overseeing the operations of multiple machines in the plant. To ensure smooth production and prevent downtime, Alex needs to regularly check the efficiency of each machine. Identifying the second least efficient machine is crucial for prioritizing maintenance efforts and avoiding potential breakdowns. Alex requires a reliable function to quickly determine the second smallest efficiency score from a list of scores, which will help in scheduling maintenance for the appropriate machine.", "persona": "ISTJ"}
{"realworld": "Problem: Determine the number of sentences in a given text that start with the word \"I\", indicating a potential state of boredom. Sentences are delimited by '.', '?', or '!'.", "identity": "Person: A high school English teacher, tasked with analyzing student essays for common writing patterns and potential issues, such as overuse of first-person narrative which might indicate a lack of engagement or creativity in the writing.", "persona": "INTJ"}
{"realworld": "Problem: Develop a function that determines if among three given integers, any one of them is equal to the sum of the other two. The function should return True if this condition is met and all inputs are integers, otherwise it should return False.", "identity": "Person: Alice, a software developer working on a new application that requires validating mathematical conditions with user inputs. She needs to implement a function to check if any of the three integers provided by the user is equal to the sum of the other two, ensuring the application handles data accurately and efficiently.", "persona": "ISTJ"}
{"realworld": "A secure communication system requires a method to encode messages for transmission. The encoding must swap the case of all letters and replace all vowels with the letter that appears two places ahead in the English alphabet. This ensures that the messages are unintelligible without the decoding mechanism.", "identity": "Person: Alice, a cybersecurity analyst at a tech company, tasked with implementing a custom encoding method for secure message transmission.", "persona": "ISTJ"}
{"realworld": "You are tasked with analyzing a list of integers to determine the largest prime number present. Once identified, you must calculate and return the sum of the digits of this largest prime number.", "identity": "You are a data analyst working for a cybersecurity firm. Your team has intercepted a list of integers that may contain encryption keys. Your task is to analyze this list to find the largest prime number, which could be a critical key. Once identified, you need to calculate the sum of the digits of this largest prime number to potentially decode encrypted messages.", "persona": "ISTJ"}
{"realworld": "A software company is developing a system to manage user-generated content where metadata about each content item is stored in dictionaries. The system requires that all metadata keys be consistently formatted either in all lower case or all upper case to ensure uniform data retrieval and processing. However, due to various input sources and manual data entry, the metadata dictionaries often contain keys with mixed cases, leading to data inconsistencies and processing errors. The company needs a solution to validate the case consistency of dictionary keys before they are stored in the database.", "identity": "A software engineer at the company is tasked with developing a validation mechanism that checks the case consistency of metadata keys in incoming dictionaries and standardizes them to either all lower case or all upper case, depending on the system's requirements. This solution must be efficient and integrate seamlessly with the existing data processing pipeline to prevent data inconsistencies and ensure smooth operation of the content management system.", "persona": "ISTJ"}
{"realworld": "Problem: Develop a function that efficiently identifies and returns a list of prime numbers less than a given non-negative integer n. This function is crucial for applications requiring prime number generation, such as cryptography, number theory research, and algorithmic challenges.", "identity": "Person: Alice, a software developer specializing in cybersecurity, is tasked with enhancing the encryption algorithms used in her company's software. She needs to implement a function that quickly generates prime numbers for key generation in cryptographic systems, ensuring both security and performance.", "persona": "INTJ"}
{"realworld": "A financial institution needs to calculate the product of the unit digits of account numbers for security checks. For example, if two account numbers are 148 and 412, the product of their unit digits (8 and 2) should be 16. This calculation is crucial for verifying transactions and ensuring data integrity.", "identity": "A bank's IT security analyst, responsible for developing and implementing security protocols to prevent fraud and ensure data accuracy during transactions. They encounter the need to create a new security check that involves calculating the product of the unit digits of account numbers involved in transactions to enhance transaction verification and data integrity.", "persona": "ISTJ"}
{"realworld": "In a large dataset of text entries, there is a need to analyze the frequency of uppercase vowels appearing at even positions within each string to identify patterns or anomalies that could be indicative of specific data entry errors or formatting standards.", "identity": "A data analyst working for a tech company that manages a vast database of user-generated content, such as social media posts or customer reviews, is tasked with identifying any irregularities in text formatting that might indicate data entry errors or non-compliant formatting standards. They need to focus on uppercase vowels appearing at even positions within strings to uncover any patterns or anomalies that could help improve data quality and consistency.", "persona": "ISTJ"}
{"realworld": "Problem: Implement a function that takes a string representing a number and returns the closest integer, rounding away from zero if the number is equidistant from two integers.", "identity": "Person: A software developer working on a financial application that requires precise rounding of monetary amounts. They need to ensure that rounding is done correctly to avoid discrepancies in transactions and to comply with financial regulations.", "persona": "ISTJ"}
{"realworld": "A construction company needs to build a series of stone pyramids for a historical theme park. Each pyramid has a specific number of levels, and the number of stones required for each level follows a unique pattern: the first level uses n stones, the second level uses the next odd number if n is odd, or the next even number if n is even, and this pattern continues for each subsequent level. The company needs to determine the exact number of stones required for each level of every pyramid to efficiently manage their inventory and construction schedule.", "identity": "John is a project manager at the construction company tasked with overseeing the construction of the stone pyramids for the historical theme park. He needs to calculate the total number of stones required for each level of every pyramid to ensure that the materials are ordered and delivered on time, and that the construction schedule is maintained efficiently. John must devise a method to follow the unique pattern of stone requirements for each level, which involves determining the next odd or even number based on the initial number of stones for the first level.", "persona": "ISTJ"}
{"realworld": "In a customer service chatbot system, incoming messages from users often contain words separated by commas or spaces. The chatbot needs to accurately parse these messages into individual words to understand and respond appropriately. For instance, a message like \"Hello, how can I help you today?\" should be split into [\"Hello\", \"how\", \"can\", \"I\", \"help\", \"you\", \"today?\"] to facilitate effective communication.", "identity": "A software developer specializing in natural language processing (NLP) is tasked with improving the parsing algorithm of a customer service chatbot. The developer must ensure that the chatbot can accurately split user messages into individual words, regardless of whether they are separated by commas, spaces, or a mix of both, to enhance the chatbot's understanding and response accuracy.", "persona": "INTP"}
{"realworld": "A company needs to assign a unique even-numbered ID to each new employee within a specified range of numbers. The range starts from a lower bound (x) and goes up to an upper bound (y). If no even number is available within this range, the company must indicate that no valid ID can be assigned.", "identity": "A human resources manager at a growing tech company needs to assign even-numbered employee IDs within a specified range, starting from 2000 to 2999. If the range does not contain any even numbers, they must report that no valid ID can be assigned.", "persona": "INTJ"}
{"realworld": "Problem: Develop a function that calculates the rounded average of integers in a given range, converts the result to binary, and handles edge cases where the start of the range is greater than the end.", "identity": "Person: Alice, a software developer working on a data processing application, needs to implement a function that computes the rounded average of integers within a specified range, converts the average to binary, and gracefully handles scenarios where the range's start is greater than its end. This function is crucial for a new feature in the application that analyzes data patterns and requires robust error handling.", "persona": "ISTJ"}
{"realworld": "In a financial institution, there is a need to identify and sort account numbers that do not contain any even digits for security checks. These account numbers are stored in a list and need to be processed to ensure they are free from potential fraud patterns associated with even digits. The resulting list should be sorted in increasing order for easier management and verification.", "identity": "A bank's fraud analyst, tasked with enhancing account security by identifying and sorting account numbers that lack even digits, to prevent fraudulent activities linked to such patterns.", "persona": "ISTJ"}
{"realworld": "A company needs to prioritize and categorize customer feedback based on the severity of issues reported, where each severity level is represented by a number from 1 to 9. The feedback data includes various severity levels, but also contains invalid entries (numbers outside the 1-9 range). The company wants to process this data to identify the most critical issues first, by sorting the valid severity levels in descending order and then converting them into their corresponding textual descriptions (\"One\" to \"Nine\") for easier reporting and action prioritization.", "identity": "A data analyst at the company is tasked with processing the customer feedback data. They need to filter out invalid severity level entries, sort the valid ones in descending order, and convert these numerical values into their corresponding textual descriptions for a clear and actionable report.", "persona": "ISTJ"}
{"realworld": "Problem: Implement a function that generates a list of size n, where each element at index i (starting from 1) is either the factorial of i if i is even, or the sum of numbers from 1 to i if i is odd.", "identity": "Person: Alice, a software developer working on a data processing application for a research lab. She needs to implement a function that generates a specific sequence of numbers for analysis in her project. The sequence involves alternating between factorials for even indices and sums for odd indices. This function will be used to process large datasets efficiently.", "persona": "INTJ"}
{"realworld": "Problem: Determine the number of even and odd integer palindromes within a given range from 1 to n, where n is a positive integer up to 1000. The solution should return a tuple containing the count of even palindromes and the count of odd palindromes respectively.", "identity": "Person: A computer science student working on a coding challenge or assignment that requires them to implement a function to count even and odd integer palindromes within a specified range. They need to understand the logic behind identifying palindromes and efficiently count them based on their parity (even or odd).", "persona": "INTJ"}
{"realworld": "In a financial system, there is a need to identify transactions that have a significant impact based on the sum of their digit values. The system processes a list of transaction amounts (which can be positive or negative) and needs to count how many of these transactions have a sum of digits greater than zero, considering the sign of each digit in negative numbers. This helps in prioritizing transactions for further analysis or action.", "identity": "A financial analyst at a large bank is tasked with identifying high-impact transactions for closer scrutiny. These transactions are characterized by having a sum of digit values greater than zero, taking into account the sign of each digit in negative numbers. This analysis aids in detecting unusual patterns or potential fraud in the transaction data.", "persona": "ISTJ"}
{"realworld": "Problem: Given an array of N unique integers, determine if it is possible to sort the array in non-decreasing order by performing any number of right shift operations. A right shift operation moves each element one position to the right, with the last element moving to the first position. If the array can be sorted by these operations, return True; otherwise, return False. If the array is empty, return True.", "identity": "Person: Alice, a software developer working on a data processing application, needs to implement a function that checks if an array can be sorted using right shift operations for efficient data manipulation and sorting in her application.", "persona": "INTJ"}
{"realworld": "Problem: Determine if it is possible to exchange elements between two lists of numbers such that the first list becomes a list of only even numbers. Return \"YES\" if possible, otherwise return \"NO\".", "identity": "Person: Alice, a software developer working on a data management application.\n\nDescription: Alice is tasked with developing a feature for her company's application that allows users to manipulate lists of numbers. One specific requirement is to implement a function that checks if it's possible to swap elements between two given lists such that the first list ends up containing only even numbers. Alice needs to write an algorithm that determines whether this is achievable and returns \"YES\" if it is, or \"NO\" otherwise.", "persona": "INTJ"}
{"realworld": "In a text analysis project, you need to identify the most frequently occurring lowercase letters in a given text. The text consists of space-separated lowercase letters, and you must return a dictionary containing the letter(s) with the highest frequency and their corresponding count(s). If multiple letters have the same highest frequency, all such letters should be included in the result.", "identity": "Name: Dr. Emily Carter\n\nOccupation: Linguistics Researcher\n\nBackground: Dr. Emily Carter is a dedicated linguist specializing in computational linguistics. She works at a prestigious university, where she leads a team focused on developing algorithms to analyze and interpret linguistic data. Her current project involves studying the frequency of letters in various texts to understand patterns in language usage and to improve text processing algorithms.\n\nProblem Encounter: Dr. Carter has been given a large dataset of text consisting of space-separated lowercase letters. Her task is to develop a program that can efficiently analyze this text and identify the most frequently occurring letters. The output should be a dictionary that lists all letters with the highest frequency and their respective counts. This analysis will help her team refine their algorithms for text processing and language modeling.", "persona": "INTJ"}
{"realworld": "Problem: Given two strings s and c, remove all characters in s that are present in c, and determine if the resulting string is a palindrome. Return a tuple containing the modified string and a boolean indicating whether it is a palindrome.", "identity": "Person: Alice, a software developer working on a text processing application, needs to implement a function that cleans a string by removing specified characters and checks if the cleaned string is a palindrome. She is tasked with ensuring the function is efficient and correctly handles various input scenarios.", "persona": "INTJ"}
{"realworld": "Problem: Develop a function that processes a list of strings, each containing only digits, and returns a new list where each element describes the count of odd digits in the corresponding input string, formatted as specified.", "identity": "Person: A software developer working on a data processing application for a financial institution. They need to analyze transaction data represented as strings of digits to identify patterns related to odd numbers, which are crucial for fraud detection algorithms. The function they are developing will help in summarizing the frequency of odd digits in each transaction record, formatted in a specific way for further analysis.", "persona": "ISTJ"}
{"realworld": "A logistics company needs to optimize the delivery routes for their fleet of trucks. Each truck's route is represented by an array of integers, where each integer represents the fuel consumption (in liters) for a segment of the route. The company wants to identify the route segment with the least fuel consumption to potentially reroute trucks to save on fuel costs. They need a function to find the minimum sum of any non-empty sub-array of fuel consumption values for each truck's route.", "identity": "A logistics analyst at the company is tasked with developing a software solution to optimize fuel consumption for the fleet. This involves analyzing the fuel consumption data for each truck's route, which is stored in arrays. The analyst needs to create a function that efficiently computes the minimum sum of any non-empty sub-array of these fuel consumption values for each route. This information will help in identifying the most fuel-efficient segments of the routes, allowing the company to adjust the routes accordingly to reduce fuel costs and environmental impact.", "persona": "INTJ"}
{"realworld": "You are managing a water extraction operation where a grid represents wells, with each row being a well and each 1 in a row representing a unit of water. Each well has a bucket with a specified capacity to extract water. The task is to determine the minimum number of times the buckets need to be lowered to empty all the wells.", "identity": "You are an operations manager at an oil rig where each well produces a varying amount of oil represented by a grid. Each row in the grid corresponds to a well, and each '1' in a row indicates a unit of oil. Each well has a pump with a specified capacity to extract oil. Your job is to calculate the minimum number of times the pumps need to be operated to extract all the oil from the wells.", "persona": "ISTJ"}
{"realworld": "Problem: Develop a function that sorts an array of non-negative integers based on the number of ones in their binary representation, with ties broken by the integer's decimal value in ascending order.", "identity": "Person: A software developer working on a data analysis project for a telecommunications company. They need to analyze network traffic patterns and optimize data routing based on the binary characteristics of packet identifiers. The function will help in sorting these identifiers efficiently for further processing.", "persona": "INTJ"}
{"realworld": "A content marketing agency needs to categorize blog posts based on the complexity of the language used. They want to identify words in their posts that contain exactly a specified number of consonants to analyze the diversity and complexity of the vocabulary. This will help them tailor their content to specific educational levels and target audiences. They require a function that can extract all words from a given text that match the specified consonant count, in the order they appear in the text.", "identity": "A software developer at the content marketing agency is tasked with creating a function that scans through blog posts to find words with a specified number of consonants. This function will be integrated into their content management system to assist content strategists in quickly identifying and analyzing the complexity of the language used in their posts, thereby enabling them to adjust their writing style to better suit their target audience's reading level.", "persona": "INTJ"}
{"realworld": "Problem: Identify the closest vowel in a given word that is positioned between two consonants from the right side of the word, excluding vowels at the beginning or end. Return an empty string if no such vowel is found.", "identity": "Person: A linguist working on a speech recognition software project.\n\nDescription: The linguist is tasked with improving the accuracy of vowel recognition in the software. To do this, they need to develop an algorithm that can identify the closest vowel positioned between two consonants from the right side of a word, excluding vowels at the beginning or end. This will help the software better understand and process spoken language, especially in contexts where the pronunciation of vowels can vary significantly.", "persona": "INTJ"}
{"realworld": "Problem: Determine if two strings consisting only of open and close parentheses can be concatenated in some order to form a balanced parentheses string.", "identity": "Person: A software developer working on a compiler optimization task. They need to check if two given code blocks, represented as strings of parentheses, can be merged without causing syntax errors.", "persona": "INTJ"}
{"realworld": "Problem: In a financial analysis system, the system needs to identify the top k highest stock price changes within a given time frame from an array of daily stock price changes. The array can contain up to 1000 entries, with each entry representing a change in stock price ranging from -1000 to 1000. The system must efficiently return a sorted list of these top k changes to help investors make informed decisions.", "identity": "Person: A financial analyst named Alex, who works for a hedge fund, needs to quickly identify the most significant stock price movements each day to inform trading strategies and investment decisions. Alex relies on the financial analysis system to provide accurate and timely data on the top k stock price changes to stay ahead of market trends and maximize investment returns.", "persona": "ISTJ"}
{"realworld": "A company is tracking the performance metrics of its employees using a list where each element represents a metric for an employee. The list is indexed starting from 0, and every second index (even positions) contains metrics related to the employees' productivity. Some of these metrics are odd numbers, which indicate unique productivity spikes. The company wants to calculate the total of these odd metrics in even positions to understand the collective impact of these unique spikes on overall productivity.", "identity": "A data analyst at the company is tasked with extracting and summing these odd metrics from the list of employee performance data. They need to iterate through the list, identify the metrics in even positions, check if they are odd numbers, and then sum these odd numbers to provide a report on the collective impact of these unique productivity spikes.", "persona": "ISTJ"}
{"realworld": "Problem: In a financial transaction log, each entry represents an amount in dollars. The log contains entries with amounts that can range from single digits to millions. For a given subset of the first k transactions, calculate the total amount of money transferred only for transactions where the amount is less than $100 (i.e., two-digit amounts). This summary is needed for a quick financial overview focusing on small transactions.", "identity": "Person: A financial analyst at a mid-sized bank.\n\nDescription: The financial analyst is responsible for monitoring and reporting on daily transaction activities. They need to provide a summary of small transactions (less than $100) from the initial batch of transactions to help the bank's management quickly assess any unusual patterns or risks associated with smaller financial activities. This summary aids in decision-making regarding operational efficiency and potential fraud detection.", "persona": "ISTJ"}
{"realworld": "Problem: Develop a function that, given a positive integer n, returns a sorted list of the odd numbers in the Collatz sequence starting from n. The Collatz sequence is defined by the rules: if a number is even, divide it by 2; if it is odd, multiply it by 3 and add 1. The sequence continues until it reaches 1. The function should specifically identify and list only the odd numbers encountered in this sequence.", "identity": "Person: A software developer working on a mathematical project who needs to analyze the properties of the Collatz sequence, focusing on the odd numbers within it. This developer is tasked with creating a tool that can help in studying the distribution and frequency of odd numbers in the sequence, which could be useful for further research or educational purposes.", "persona": "INTJ"}
{"realworld": "Develop a function to validate date strings in the format \"mm-dd-yyyy\", ensuring the date is not empty, the day and month values are within valid ranges, and the format strictly follows \"mm-dd-yyyy\" without any other separators like \"/\".", "identity": "Person: A software developer working on a web application that requires user input for dates in a specific format. They need to ensure that the date input is valid and follows the \"mm-dd-yyyy\" format strictly to avoid any data inconsistencies or errors in processing.", "persona": "ISTJ"}
{"realworld": "A system processes text inputs and needs to handle various formats. It must split text into words based on whitespace, handle cases with commas instead of spaces, and in the absence of both, count the number of lowercase letters that appear in odd positions in the alphabet.", "identity": "A software developer working on a text processing system for a multilingual search engine. The system must accurately parse and index text inputs from diverse sources, including documents with unconventional formatting. The developer needs to implement algorithms to split text by whitespace, manage comma-separated inputs, and calculate the count of lowercase letters in odd alphabet positions for inputs with no clear delimiters.", "persona": "INTJ"}
{"realworld": "In a manufacturing process, a conveyor belt sequentially processes items with unique identifiers. The system needs to ensure that the items are processed in strictly increasing order of their identifiers. If any item is processed out of order or if there are duplicate identifiers, the system must detect this to prevent errors in downstream operations. The function `is_sorted(lst)` is used to verify the order and uniqueness of the identifiers in real-time.", "identity": "**Person:** Jane Doe, a Quality Assurance Engineer at a manufacturing plant.\n\n**Description:** Jane is responsible for monitoring the conveyor belt system that processes items with unique identifiers. Her role involves ensuring that the items are processed in strictly increasing order of their identifiers to maintain the integrity of the manufacturing process. She uses the `is_sorted(lst)` function to continuously check the order and uniqueness of the identifiers, alerting her immediately if any discrepancies are found, so she can take corrective action to prevent errors in downstream operations.", "persona": "ISTJ"}
{"realworld": "A scheduling system needs to determine if the overlap between two booked time slots is a prime number of hours. Each time slot is represented by a start and end time, and the system must check if the intersection of these slots, if it exists, has a duration that is a prime number. If the intersection duration is a prime number, the system should return \"YES\"; otherwise, it should return \"NO\". If the slots do not overlap, the system should also return \"NO\".", "identity": "Person: A software developer working on a scheduling application for a hospital. This application needs to manage doctor's appointments and ensure that no prime number of hours are overlapped between consecutive appointments to maintain efficient scheduling and prevent overbooking. The developer must implement a function that checks for prime number overlaps and returns the appropriate response based on the intersection duration of two time slots.", "persona": "INTJ"}
{"realworld": "You are tasked with calculating the sum of magnitudes of integers in an array, adjusted by the product of their signs (positive, negative, or zero). The result should be None for an empty array.", "identity": "You are a data analyst working for a financial firm. Your task is to develop a script that calculates a unique metric for evaluating the risk of a portfolio. This metric involves summing the absolute values of the portfolio's daily returns, but it also considers the direction of these returns (positive, negative, or zero) by multiplying each return by its sign before summing. If the portfolio has no daily returns (an empty array), the result should be indicated as \"None\" to signify no data. This metric will help the firm understand the volatility and directional impact of their investments.", "persona": "ISTJ"}
{"realworld": "Problem: Given a grid with N rows and N columns (N >= 2) where each cell contains a unique value in the range [1, N * N], find the minimum path of length k that starts from any cell and moves to neighbor cells without going off the grid. The path is considered minimum if the sequence of values visited by the path is lexicographically the smallest among all possible paths of length k. Return the ordered list of values visited by the minimum path.", "identity": "Person: Alice, a competitive programmer, is preparing for an upcoming coding competition. She encounters a problem where she needs to find the lexicographically smallest path of a given length k in a grid filled with unique values. This problem challenges her algorithmic skills and understanding of graph traversal and pathfinding algorithms. Alice must devise an efficient solution to solve this problem within the time constraints of the competition.", "persona": "INTJ"}
{"realworld": "The problem involves generating the first `n + 1` numbers of the Tribonacci sequence, a variation of the Fibonacci sequence where each term is defined by a specific recurrence relation involving the previous three terms. The sequence starts with `tri(1) = 3`, and the recurrence rules are: `tri(n) = 1 + n / 2` if `n` is even, and `tri(n) = tri(n - 1) + tri(n - 2) + tri(n + 1)` if `n` is odd. The challenge is to efficiently compute and return the sequence up to the `n+1`th term.", "identity": "**Person Encountering the Problem:**\n\n**Name:** Dr. Emily Carter  \n**Occupation:** Mathematician and Computer Science Professor  \n**Background:** Dr. Carter specializes in computational mathematics and algorithm design. She is particularly interested in sequences and series, and often uses them as case studies in her lectures to teach her students about efficient algorithm development.\n\n**Scenario:**\nDr. Carter is preparing for her upcoming lecture on dynamic programming and recurrence relations. She wants to introduce her students to the Tribonacci sequence, a unique variation of the Fibonacci sequence, to demonstrate how to handle complex recurrence relations efficiently. She needs to generate the first `n + 1` numbers of the Tribonacci sequence to use as an example in her lecture, ensuring that her algorithm is both correct and optimized for performance.", "persona": "INTJ"}
{"realworld": "A company needs to process customer IDs to identify those with specific characteristics for targeted marketing. Each customer ID is a positive integer, and the company wants to focus on customers whose IDs contain odd digits. They need to calculate the product of these odd digits for each ID. If an ID has no odd digits, it should be flagged for exclusion from the marketing campaign.", "identity": "A data analyst at the company is tasked with creating a program or script that processes the list of customer IDs, identifies those with odd digits, calculates the product of these odd digits, and flags IDs without odd digits for exclusion. This involves writing a function that iterates through each digit of a customer ID, checks if it is odd, multiplies these odd digits, and handles IDs with no odd digits appropriately.", "persona": "INTJ"}
{"realworld": "In a software system designed to manage complex configurations, there is a need to validate the structure of nested configurations represented as strings of square brackets. The system requires that at least one set of brackets is properly nested within another for the configuration to be considered valid. This validation ensures that the configurations are correctly structured and can be processed without errors.", "identity": "A software developer working on a configuration management system for a large-scale distributed application needs to implement a function that checks if a given string of square brackets contains at least one instance of properly nested brackets. This validation is crucial to ensure that the complex configurations are correctly structured and can be processed without errors.", "persona": "INTJ"}
{"realworld": "You are tasked with calculating the sum of squared numbers from a list, where each number is first rounded up to the nearest integer (ceiling). For example, given the list [1.4, 4.2, 0], the output should be 29, as the numbers 1.4 and 4.2 are rounded up to 2 and 5 respectively, and their squares (4 + 25 + 0) sum to 29.", "identity": "You are a data analyst working for a financial firm. Your task is to analyze a list of stock prices, which are provided as decimal numbers. You need to calculate the risk associated with these stocks by summing the squares of the stock prices after rounding them up to the nearest whole dollar. This helps in assessing the potential volatility and risk in the portfolio. For instance, if the stock prices are [1.4, 4.2, 0], you would round them up to [2, 5, 0], square these values to get [4, 25, 0], and then sum them to get a total risk measure of 29.", "persona": "ISTJ"}
{"realworld": "Develop a system to verify if the last character in a user-submitted text is an alphabetical character and not part of a word, to ensure proper formatting for database entry.", "identity": "A software developer tasked with enhancing a web application's input validation to ensure that user-submitted text ends with a standalone alphabetical character, not part of a word, for correct database formatting and consistency.", "persona": "ISTJ"}
{"realworld": "In a manufacturing process, a sequence of components is assembled in a specific order. Each component has a unique quality rating. The process requires that each subsequent component must have a quality rating greater than or equal to the previous one. The problem is to identify the position in the sequence where this rule is first violated, if any, to quickly address and rectify any potential issues in the assembly line.", "identity": "A quality control inspector at an electronics manufacturing plant is responsible for monitoring the assembly of circuit boards. Each component added to the board has a documented quality rating. The inspector must ensure that every new component has a quality rating at least as high as the last, to maintain the integrity of the final product. The inspector uses a checklist and a quality rating database to quickly identify the first instance where a component's quality rating does not meet the required standard, so that the assembly line can be halted and the issue resolved promptly.", "persona": "ISTJ"}
{"realworld": "Problem: In a financial application, users need to analyze transaction data to identify the highest negative balance (representing the largest debt) and the lowest positive balance (representing the smallest surplus) within a list of account balances. The application must efficiently determine these values to provide users with a quick financial summary, but some lists may contain no negative or positive balances.", "identity": "Person: A financial analyst at a bank, responsible for monitoring and summarizing account health for thousands of clients. They use the financial application to quickly identify accounts with the most significant debt and the least surplus to prioritize their review and intervention strategies.", "persona": "ISTJ"}
{"realworld": "In a financial application, users input monetary values in various formats (integers, floats, or strings with commas as decimal separators). The system needs to consistently determine and display the higher value for comparison purposes, ensuring that the output format matches the input format.", "identity": "A financial analyst working for a multinational corporation uses a custom-built financial analysis tool to compare revenue figures from different regions. These figures are entered in various formats, such as \"1,234.56\" (US format), \"1.234,56\" (European format), and plain integers like \"1234\". The system must accurately identify the highest revenue figure and present it in the same format as the original input for clarity and consistency in reporting.", "persona": "ISTJ"}
{"realworld": "A company needs to distribute resources equally among four teams, ensuring that each team receives an even number of resources. They need to determine if a given total number of resources can be evenly divided into four even parts.", "identity": "A resource manager at a tech company has 27 laptops to distribute among four development teams. She needs to figure out if it's possible to divide these laptops so that each team gets an even number of laptops, ensuring fairness and efficient resource allocation.", "persona": "INTJ"}
{"realworld": "The problem is to efficiently compute the Brazilian factorial for large integers, which involves calculating the product of factorials of all integers from 1 to n. This computation can be computationally expensive and memory-intensive for large values of n.", "identity": "Person: A mathematician specializing in number theory and computational mathematics, who is working on a research project that requires the computation of the Brazilian factorial for large integers to explore its properties and applications in combinatorial analysis and cryptography.", "persona": "INTJ"}
{"realworld": "A content management system requires a function to standardize the formatting of text inputs. The function should replace all single spaces with underscores and convert sequences of more than two consecutive spaces into a single hyphen. This is necessary to ensure consistent and readable URLs generated from user-submitted titles and descriptions.", "identity": "Name: Emily Carter\nOccupation: Web Developer\nBackground: Emily is a seasoned web developer at a mid-sized digital marketing agency. She specializes in creating and maintaining content management systems (CMS) for various clients. Her role involves ensuring that the CMS functions efficiently and meets the specific needs of each client, including the formatting of URLs based on user-submitted content.", "persona": "ISTJ"}
{"realworld": "In a digital asset management system, files must adhere to specific naming conventions to ensure proper categorization and functionality. The system requires that file names contain no more than three digits, exactly one dot, a non-empty prefix starting with a Latin alphabet letter, and a suffix that must be one of ['txt', 'exe', 'dll']. Implementing a function to validate these file names is essential to maintain the integrity and usability of the system.", "identity": "A software developer working on a digital asset management system needs to implement a function that validates file names according to strict naming conventions. The function must check that file names do not exceed three digits, contain exactly one dot, start with a Latin alphabet letter, and end with a specific suffix from a predefined list. This ensures that files are correctly categorized and functional within the system.", "persona": "ISTJ"}
{"realworld": "A financial analyst needs to calculate the total value of a portfolio where assets are adjusted based on their positions in the portfolio. Every third asset's value is squared, and every fourth asset's value, which is not a multiple of three, is cubed. The analyst needs to sum these adjusted values to determine the portfolio's total adjusted value.", "identity": "A financial analyst is tasked with recalculating the total value of a diverse investment portfolio. The portfolio contains various assets, and the analyst must apply specific mathematical adjustments to these assets' values to reflect their strategic importance or risk profile within the portfolio. Specifically, the analyst must square the value of every third asset in the list and cube the value of every fourth asset, provided it is not also a multiple of three. After applying these adjustments, the analyst sums up all the modified values to arrive at the portfolio's total adjusted value, which is used for more accurate risk assessment and strategic decision-making.", "persona": "INTJ"}
{"realworld": "Problem: Given a sentence as a string, extract and return a new string containing only the words whose lengths are prime numbers, maintaining the original order of these words.", "identity": "Person: A software developer working on a text processing application that requires filtering words based on their length for a specialized search feature.", "persona": "INTJ"}
{"realworld": "Problem: Implement a function that checks if the product of two fractions represented as strings in the format \"<numerator>/<denominator>\" results in a whole number. The function should return True if the product is a whole number and False otherwise.", "identity": "Person: A software developer working on a mathematical application that requires handling and validating fraction operations. They need to ensure that the product of two fractions is a whole number before proceeding with further calculations or storing the result in the database.", "persona": "ISTJ"}
{"realworld": "In a competitive gaming tournament, players are ranked based on their scores, which are represented as integers. The tournament organizers need to sort the players' scores in ascending order based on the sum of the digits in their scores, to determine the final rankings. If two players have scores with the same sum of digits, they should maintain their original order of appearance in the score list. This sorting method ensures a fair ranking system that considers both the magnitude and the composition of the scores.", "identity": "A tournament organizer named Alex is tasked with sorting the scores of players in a gaming competition. The scores are integers, and Alex needs to rank the players based on the sum of the digits in their scores. If two players have the same sum of digits, they should retain their original order in the list. This method helps in creating a balanced ranking system that accounts for both the overall score and the distribution of digits within the score.", "persona": "ISTJ"}
{"realworld": "Problem: Identify and count the numbers in a list that are greater than 10 and have both their first and last digits as odd numbers (1, 3, 5, 7, 9).", "identity": "Person: A data analyst working on a project that requires filtering and counting specific types of numbers from a dataset. They need to identify numbers greater than 10 where both the first and last digits are odd, to analyze patterns in the data related to odd-ended numbers.", "persona": "ISTJ"}
{"realworld": "Problem: Given a positive integer n, create an array a where each element a[i] = i * i - i + 1. Determine the number of unique triples (a[i], a[j], a[k]) such that i < j < k and the sum a[i] + a[j] + a[k] is a multiple of 3.", "identity": "Person: Alice, a software developer working on a project that involves optimizing mathematical algorithms for a tech company. She needs to solve a specific problem related to number theory and array manipulation to improve the performance of a key feature in their software.", "persona": "INTJ"}
{"realworld": "The problem is to develop a function that, given the names of two planets in our solar system, returns a tuple of all planets located between them, sorted by their proximity to the Sun. The function should handle incorrect planet names by returning an empty tuple.", "identity": "Person: A software developer working on a solar system educational app for children. They need to implement a feature that helps users learn about the planets between any two given planets in the solar system, in order of their distance from the Sun. This function will be part of the app's interactive learning module, which teaches about the solar system's structure and the relative positions of planets.", "persona": "INTJ"}
{"realworld": "The problem is to create a function that processes a list of strings by removing strings with odd lengths, sorting the remaining strings first by their length and then alphabetically if lengths are equal, and returning the sorted list. The function should handle lists with duplicates and ensure all remaining strings have even lengths.", "identity": "Person: A software developer working on a text processing application.\n\nDescription: This developer is tasked with implementing a function that filters and sorts a list of strings based on specific criteria. The function needs to remove any strings with odd lengths, sort the remaining strings by their length (ascending), and then alphabetically if lengths are equal. The developer must ensure the function handles lists with duplicates and guarantees that all output strings have even lengths. This functionality is crucial for the application's text analysis feature, which requires clean, sorted data for further processing.", "persona": "INTJ"}
{"realworld": "The problem is to determine whether a given integer n is a prime number and return a specific value based on this determination. If n is prime, the function should return x; otherwise, it should return y. This function is crucial in scenarios where decision-making or processing depends on the primality of a number, such as in cryptographic algorithms or data filtering processes.", "identity": "The person encountering this problem is a software developer working on a cybersecurity project. They need to implement a function that checks the primality of an integer n for cryptographic key generation, where prime numbers are essential for ensuring the security and efficiency of encryption algorithms. The function's output, either x or y, will dictate subsequent steps in the key generation process, with x indicating a prime number suitable for use and y indicating a non-prime number that must be discarded or processed differently.", "persona": "INTJ"}
{"realworld": "Problem: Calculate the total energy consumption of a fleet of electric vehicles based on their battery charge levels. Only consider vehicles with odd-numbered battery charge levels and ignore those with negative or non-integer values. The energy consumption for each vehicle is proportional to the square of its battery charge level.", "identity": "Person: A fleet manager at an electric vehicle rental company needs to calculate the total energy consumption for their fleet. They focus on vehicles with odd-numbered battery charge levels, ensuring data accuracy by excluding those with negative or non-integer values. The energy consumption is determined by squaring each valid battery charge level and summing these values for the entire fleet.", "persona": "ISTJ"}
{"realworld": "A sports analytics company wants to evaluate the accuracy of fans' predictions for a series of matches. They have collected two arrays: one containing the actual scores of each match and another containing the fans' guesses for the same matches. The task is to determine how far off each guess was from the actual score, returning an array where each element represents the difference between the guess and the actual score, with 0 indicating a correct guess.", "identity": "A sports enthusiast named Alex works as a data analyst at a sports analytics company. The company is interested in understanding the predictive accuracy of their fan base for upcoming matches. They have gathered data on the actual scores of recent matches and the corresponding predictions made by fans. Alex's job is to analyze this data and calculate the difference between each fan's prediction and the actual score, providing insights into the fans' forecasting abilities. This analysis will help the company assess the reliability of fan predictions and potentially use this data to enhance their own predictive models or engage with fans more effectively.", "persona": "ISTJ"}
{"realworld": "Problem: Identify the strongest extension for a given class name from a list of extensions based on the criteria that the strength of an extension is determined by the difference between the number of uppercase letters (CAP) and the number of lowercase letters (SM) in the extension's name. If multiple extensions have the same strength, the one that appears first in the list should be chosen. The result should be formatted as \"ClassName.StrongestExtensionName\".", "identity": "Person: A software developer working on a project that requires selecting the most appropriate file extension for various class names. They have a list of potential extensions and need to determine which one best fits each class based on the specified criteria. They are using a script or tool to automate this process to ensure consistency and efficiency in their project.", "persona": "ISTJ"}
{"realworld": "A software developer is tasked with creating a function that checks if any rotation of a given word is a substring of another word. This function is crucial for a new text-based game that requires validating player inputs against a set of predefined words, where the inputs can be rotated versions of the correct words.", "identity": "A software developer named Alex is working on a new text-based game. The game requires that player inputs be validated against a set of predefined words, which can be rotated versions of the correct words. Alex's task is to create a function that efficiently checks if any rotation of a given word is a substring of another word. This function is essential for ensuring the game's logic accurately processes and validates player inputs.", "persona": "INTJ"}
{"realworld": "A digital marketing agency wants to analyze the performance of their ad campaigns by counting the number of even and odd digits in the conversion rates of their campaigns. They need a method to quickly determine the distribution of even and odd digits in these rates to identify patterns and optimize their strategies.", "identity": "A data analyst at the digital marketing agency, skilled in statistical analysis and proficient in programming languages like Python, is tasked with developing a script or tool that can parse through the conversion rates of various ad campaigns, count the occurrences of even and odd digits, and visualize the results to help the marketing team understand the data and make informed decisions.", "persona": "INTJ"}
{"realworld": "Problem: Develop a function that converts a given positive integer (between 1 and 1000) into its equivalent Roman numeral in lowercase. The function should handle edge cases and ensure accurate conversion for all valid inputs within the specified range.", "identity": "Person: A software developer working on a historical educational app aimed at teaching children about ancient civilizations. They need to implement a feature that displays numbers in a user-friendly format, specifically converting modern numbers to lowercase Roman numerals for better engagement and understanding.", "persona": "INTP"}
{"realworld": "Determine if a set of three given side lengths forms a right-angled triangle, which is crucial in fields like architecture and engineering for ensuring structural integrity and proper alignment.", "identity": "An architect designing a building needs to verify if the dimensions of a structural beam form a right-angled triangle to ensure the stability and correct alignment of the building's framework.", "persona": "INTJ"}
{"realworld": "In a digital library management system, there is a need to categorize books based on the uniqueness of their titles. The system must identify the book title with the most unique characters to facilitate special cataloging. If multiple titles have the same number of unique characters, the system should prioritize the title that comes first in alphabetical order. This categorization helps in optimizing search algorithms and enhancing user experience by quickly identifying and retrieving unique titles.", "identity": "A librarian named Emily is responsible for maintaining the digital library's catalog. She needs to ensure that the books are categorized based on the uniqueness of their titles to improve search efficiency and user experience. Emily uses the library management system to identify and prioritize titles with the most unique characters, helping her to quickly locate and highlight these special books for users.", "persona": "ISTJ"}
{"realworld": "A hungry rabbit has already eaten a certain number of carrots but needs to eat more to fulfill its daily requirement. Given the number of carrots already eaten, the number of carrots needed, and the number of remaining carrots in stock, determine the total number of carrots the rabbit will have eaten after its meals and the number of carrots left in stock. If there are not enough remaining carrots, the rabbit will eat all that are left but will still be hungry.", "identity": "A rabbit named Fluffy has already eaten 15 carrots today. According to its dietary needs, it should consume a total of 30 carrots daily. Fluffy's caretaker has noticed that there are currently 20 carrots left in the storage. The task is to calculate how many carrots Fluffy will have eaten by the end of the day and how many carrots will be left in stock, considering Fluffy might not be able to eat all the carrots it needs if there aren't enough in stock.", "persona": "To determine how many carrots Fluffy will have eaten by the end of the day and how many carrots will be left in stock, we need to follow these steps:\n\n1. **Calculate the total number of carrots Fluffy needs to eat today:**\n   - Fluffy needs to eat 30 carrots daily.\n\n2. **Determine how many carrots Fluffy has already eaten:**\n   - Fluffy has already eaten 15 carrots today.\n\n3. **Calculate how many more carrots Fluffy needs to eat:**\n   - Fluffy needs to eat 30 - 15 = 15 more carrots.\n\n4. **Determine the number of carrots currently in stock:**\n   - There are 20 carrots left in stock.\n\n5. **Calculate how many carrots Fluffy will actually eat:**\n   - Fluffy needs 15 more carrots, and there are 20 carrots in stock. Therefore, Fluffy will be able to eat all the 15 carrots it needs.\n\n6. **Calculate the total number of carrots Fluffy will have eaten by the end of the day:**\n   - Fluffy will have eaten 15 (already eaten) + 15 (will eat) = 30 carrots.\n\n7. **Calculate how many carrots will be left in stock:**\n   - There were 20 carrots in stock, and Fluffy will eat 15 of them. Therefore, 20 - 15 = 5 carrots will be left in stock.\n\nSo, by the end of the day, Fluffy will have eaten 30 carrots, and there will be 5 carrots left in stock."}
{"realworld": "A financial analyst needs to quickly calculate the net profit for different investment scenarios. They have a list of operations (addition, subtraction, multiplication, floor division, exponentiation) and a corresponding list of investment values. The operations and values need to be combined to compute the net profit for each scenario, but manually performing these calculations for numerous scenarios is time-consuming and error-prone.", "identity": "A financial analyst, Jane, is tasked with evaluating multiple investment scenarios for a new financial product. She has a spreadsheet with various operations (like addition, subtraction, etc.) and corresponding investment values for each scenario. To determine the net profit, she needs to apply these operations to the values systematically, but doing so manually across dozens of scenarios is inefficient and increases the risk of calculation errors.", "persona": "ISTJ"}
{"realworld": "You are tasked with developing a function that processes a given string by reversing the case of each letter in the string. If the string contains no letters, the function should reverse the entire string. The function should handle various input strings, including those with non-letter characters, and return the modified string accordingly.", "identity": "You are a software developer working on a text processing application. Your task is to create a function that takes a string as input and reverses the case of each letter in the string. If the input string does not contain any letters, the function should reverse the entire string. This function needs to be robust, handling various types of input strings, including those with non-letter characters. The goal is to ensure the function works correctly and efficiently for all possible inputs, and to integrate it into the larger application where it will be used for text manipulation tasks.", "persona": "INTJ"}
{"realworld": "Problem: A web application requires secure storage of user passwords by hashing them with MD5. However, the application must handle cases where the user enters an empty password, in which case no hash should be generated, and the system should return None to indicate an invalid input.", "identity": "Person: A software developer working on a legacy web application that uses MD5 hashing for user passwords. They need to implement a check to ensure that if a user enters an empty password, the system does not attempt to hash it and instead returns None to signify an invalid input.", "persona": "ISTP"}
{"realworld": "A company needs to assign unique, even-numbered badges to its employees, ranging from a minimum badge number (a) to a maximum badge number (b). They require a list of all even numbers within this range to ensure no two employees receive the same badge number.", "identity": "A company's HR manager, tasked with assigning unique, even-numbered badges to employees, needs to generate a list of all even numbers between a specified minimum and maximum badge number to avoid duplication and ensure each employee receives a distinct badge.", "persona": "INTJ"}
